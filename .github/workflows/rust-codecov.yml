name: Rust CodeCov uploader

on:
  workflow_call:
    inputs:
      name_of_stuff_to_test_in_target:
        description: 'Name of stuff to test in target. this is going to be used to find the stuff to generate coverage report against. like libbanyan_shared, or ipfs_proof_buddy.'
        required: true
        type: string
      needs_test:
        description: 'do we need to run the tests first?'
        required: false
        default: 'false'
        type: string

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C link-dead-code"

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - nightly
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo update
      - name: Install package
        run: |
          sudo apt-get update
          sudo apt-get -y install libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev
      - run: cargo test
        if: ${{ inputs.needs_test == 'true' }}
        continue-on-error: true
      - run: cargo build
      - name: Generate coverage report
        run: |
          wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
          tar xzf master.tar.gz &&
          cd kcov-master &&
          mkdir build &&
          cd build &&
          cmake .. &&
          make &&
          make install DESTDIR=../../kcov-build &&
          cd ../.. &&
          rm -rf kcov-master &&
          for file in target/debug/${{ inputs.name_of_stuff_to_test_in_target }}*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
          bash <(curl -s https://codecov.io/bash) &&
          echo "Uploaded code coverage"
